Key: 3f2ea559f5dff249d1ab987e6d22b902:4:69398956
pw: N1

http://api.nytimes.com/svc/mostpopular/{version}/{resource-type}/{section}[/share-types]/{time-period}[.response-format]?api-key={your-API-key}

resource-type: mostemailed | mostshared | mostviewed
section:       all-sections | One or more section names, separated by semicolons
response-format: default to json
time-period    : Number of days: 1 | 7 | 30
share-types    : (mostshared requests only) One or more types, separated by 
                 semicolons:
digg | email | facebook | mixx | myspace |
permalink | timespeople | twitter | yahoobuzz

offset         : The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21â€“40).

MY URL:

http://api.nytimes.com/svc/mostpopular/v2/mostviewed/fashion/30?offset=20&api-key=3f2ea559f5dff249d1ab987e6d22b902:4:69398956


 def self.find
    url = "http://api.nytimes.com/svc/mostpopular/v2/mostemailed/fashion/30?offset=20&api-key=3f2ea559f5dff249d1ab987e6d22b902:4:69398956"
    response = HTTParty.get(url)

    content_array = response['results'].map do |result|
      { title: result['title'],
        abstract: result['abstract'] }
    end

  end  
end


response.keys = ["status", "copyright", "num_results", "results"]

response['num_results'] 33
response['results']

response['results'][0]['adx_keywords'] 
["url", "adx_keywords", "column", "section", "byline", "type", "title", "abstract", "published_date", "source", "id", "asset_id", "views", "des_facet", "org_facet", "per_facet", "geo_facet", "media"]

